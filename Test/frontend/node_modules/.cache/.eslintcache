[{"/Users/akshaysawant/Downloads/Test/frontend/src/index.tsx":"1","/Users/akshaysawant/Downloads/Test/frontend/src/App.tsx":"2","/Users/akshaysawant/Downloads/Test/frontend/src/utils/provider.ts":"3","/Users/akshaysawant/Downloads/Test/frontend/src/components/Greeter.tsx":"4","/Users/akshaysawant/Downloads/Test/frontend/src/components/ActivateDeactivate.tsx":"5","/Users/akshaysawant/Downloads/Test/frontend/src/components/WalletStatus.tsx":"6","/Users/akshaysawant/Downloads/Test/frontend/src/utils/hooks.ts":"7","/Users/akshaysawant/Downloads/Test/frontend/src/utils/connectors.ts":"8"},{"size":401,"mtime":1660685992000,"results":"9","hashOfConfig":"10"},{"size":610,"mtime":1660685992000,"results":"11","hashOfConfig":"10"},{"size":348,"mtime":1660685994000,"results":"12","hashOfConfig":"10"},{"size":17495,"mtime":1669771641796,"results":"13","hashOfConfig":"10"},{"size":3900,"mtime":1660696218000,"results":"14","hashOfConfig":"10"},{"size":6494,"mtime":1660685994000,"results":"15","hashOfConfig":"10"},{"size":2596,"mtime":1660685994000,"results":"16","hashOfConfig":"10"},{"size":166,"mtime":1660685994000,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1s85b1x",{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/akshaysawant/Downloads/Test/frontend/src/index.tsx",[],"/Users/akshaysawant/Downloads/Test/frontend/src/App.tsx",["35","36"],"/Users/akshaysawant/Downloads/Test/frontend/src/utils/provider.ts",[],"/Users/akshaysawant/Downloads/Test/frontend/src/components/Greeter.tsx",["37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60"],"import { useWeb3React } from '@web3-react/core';\nimport { Contract, ethers, Signer, utils } from 'ethers';\nimport {\n  ChangeEvent,\n  MouseEvent,\n  ReactElement,\n  useEffect,\n  useState\n} from 'react';\nimport styled from 'styled-components';\n\nimport HuskyArtifact from '../artifacts/contracts/ERC721Token.sol/ERC721Token.json';\nimport ERC20Artifact from '../artifacts/contracts/ERC20Token.sol/ERC20Token.json';\nimport DutchAuctionArtifact from '../artifacts/contracts/DutchAuction.sol/DutchAuction.json';\nimport { HardhatRuntimeEnvironment } from 'hardhat/types';\nimport { Provider } from '../utils/provider';\nimport { getAddress } from 'ethers/lib/utils';\nimport { Title } from 'react-bootstrap/lib/Modal';\n\nconst StyledDeployContractButton = styled.button`\n  width: 180px;\n  height: 2rem;\n  border-radius: 1rem;\n  margin-left:80%;\n  border-color: blue;\n  cursor: pointer;\n  place-self: center;\n`;\n\n// const InputButon = styled.submit`\n//   margin-left: 80%;\n// `;\n\nconst StyledActivateButton = styled.button`\nbackground-color: #337AB7; /* Blue */\nborder: none;\nmargin-left: 90%;\nheight: 5rem;\nwidth:600px;\ncolor: white;\npadding: 15px 32px;\ntext-align: center;\ntext-decoration: none;\ndisplay: inline-block;\nfont-size: 16px;\nmargin-top :20px;\n`;\n\nconst ColoredLine = styled.hr`\n          color: black;\n          backgroundColor: black;\n          height: 5`;\n  \n\nconst StyledGreetingDiv = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 1fr 1fr;\n  grid-template-columns: 135px 2.7fr 1fr;\n  grid-gap: 10px;\n  place-self: center;\n  align-items: center;\n`;\n\nconst title = styled.h3`\n  display: grid;\n  grid-template-rows: 1fr 1fr 1fr;\n  grid-template-columns: 135px 2.7fr 1fr;\n  grid-gap: 10px;\n  place-self: center;\n  align-items: center;\n`;\n\nconst StyledLabel = styled.label`\n  font-weight: bold;\n`;\n\nconst StyledInput = styled.input`\n  padding: 0.4rem 0.6rem;\n  line-height: 2fr;\n`;\n\nconst StyledButton = styled.button`\n  width: 150px;\n  height: 2rem;\n  border-radius: 1rem;\n  margin-left:40px;\n  cursor: pointer;\n`;\n\nexport function Greeter(): ReactElement {\n  const context = useWeb3React<Provider>();\n  const { library, active } = context;\n\n  const [signer, setSigner] = useState<Signer>();\n  const [greeterContract, setGreeterContract] = useState<Contract>();\n  const [dutchAuctionContract, setDutchAuctionContract] = useState<Contract>();\n  const [erc20Contracts, setErc20Contracts] = useState<Contract>();\n  const [huskyContract, setHuskyContract] = useState<Contract>();\n  const [greeterContractAddr, setGreeterContractAddr] = useState<string>('');\n  const [huskyContractAddr, setHuskyContractAddr] = useState<string>('');\n  const [erc20ContractAddr, setERC20ContractAddr] = useState<string>();\n  const [dutchAuctionContractAddress, setDutchAuctionContractAddress] =\n    useState<string>();\n  const [greeting, setGreeting] = useState<string>('');\n  const [greetingInput, setGreetingInput] = useState<string>('');\n  const[currentERCBalance,setCurrentERCBalance] =useState<string>('');\n  // Extra input to handle from the event\n  const [nftId, setNFTId] = useState<string>('');\n  //const [nftId, setNFTId] = useState(0);\n  const [reservePriceInput, setReservePriceInput] = useState<string>('');\n  const [numberOfBlockInput, setNumberOfBlockInput] = useState<string>('');\n  const [offerPriceDecrementInput, setOfferPriceDecrementInput] =\n    useState<string>('');\n  const [totalNumberOfTokenInput, setTotalNumberOfTokenInput] =\n    useState<string>('');\n  const [bidAmountInput, setBidAmountInput] = useState<string>('');\n  const [auctionWinner, setAuctionWinner] = useState<string>('');\n  const [creationPrice, setCreationPrice] = useState<string>('');\n  const [owner, setOwner] = useState<string>('');\n\n  useEffect((): void => {\n    if (!library) {\n      setSigner(undefined);\n      return;\n    }\n\n    setSigner(library.getSigner());\n  }, [library]);\n\n  function handleDeployContract(event: MouseEvent<HTMLButtonElement>) {\n    event.preventDefault();\n\n    if (!signer) {\n      window.alert('No Signer.');\n      console.log('No Signer.');\n      return;\n    }\n\n    async function deployGreeterContract(signer: Signer): Promise<void> {\n\n\n      const HuskyMint = new ethers.ContractFactory(\n        HuskyArtifact.abi,\n        HuskyArtifact.bytecode,\n        signer\n      );\n\n      const ERC20 = new ethers.ContractFactory(\n        ERC20Artifact.abi,\n        ERC20Artifact.bytecode,\n        signer\n      );\n\n      const DutchAuction = new ethers.ContractFactory(\n        DutchAuctionArtifact.abi,\n        DutchAuctionArtifact.bytecode,\n        signer\n      );\n\n      try {\n\n        const erc20Contract = await ERC20.deploy(100000);\n        await erc20Contract.deployed();\n     erc20Contract.transfer(\n          '0x8626f6940E2eb28930eFb4CeF49B2d1F2C9C1199',\n          1000000\n        );\n  \n     erc20Contract.transfer(\n          '0xdD2FD4581271e230360230F9337D5c0430Bf44C0',\n          1000000\n        \n        );\n        setErc20Contracts(erc20Contract);\n\n        const huskyContract = await HuskyMint.deploy();\n        await huskyContract.deployed();\n        const testing = await huskyContract.safeMint(signer.getAddress());\n        const provider = new ethers.providers.JsonRpcProvider(\"http://localhost:8545\");\n        const txReceipt = await provider.waitForTransaction(testing.hash);\n        const nfttokenId = parseInt((txReceipt.logs[0].topics[3]));\n        setNFTId('0');\n       // console.log('NFT Token ID: ' + testing.v);\n        setHuskyContract(huskyContract);\n        setERC20ContractAddr(erc20Contract.address);\n        setHuskyContractAddr(huskyContract.address);\n\n        const dutchAuctionContract = await DutchAuction.deploy(\n          erc20Contract.address,\n          huskyContract.address,\n          0,\n          reservePriceInput,\n          numberOfBlockInput,\n          offerPriceDecrementInput\n        );\n\n        await dutchAuctionContract.deployed();\n        huskyContract.approve(dutchAuctionContract.address, nfttokenId);\n        setDutchAuctionContractAddress(dutchAuctionContract.address);\n        setDutchAuctionContract(dutchAuctionContract);\n        const creationBlock = await dutchAuctionContract.getPrice();\n        const owner = await dutchAuctionContract.getAddressOfOwner();\n\n        setCreationPrice(creationBlock.toString());\n        setOwner(owner);\n\n\n        window.alert(\n          'Dutch Auction deployed to: ' + dutchAuctionContract.address\n        );\n        // setGreeterContractAddr(greeterContract.address);\n       // setDutchAuctionContractAddress(dutchAuctionContract.address);\n      } catch (error: any) {\n        window.alert(\n          'Error!' + (error && error.message ? `\\n\\n${error.data.message}` : '')\n        );\n      }\n    }\n    deployGreeterContract(signer);\n  }\n\n  async function handleERCBalance(\n    event: MouseEvent<HTMLButtonElement>\n  ): Promise<void> {\n    event.preventDefault();\n\n    if (!signer) {\n      window.alert('No Signer.');\n      return;\n    }\n\n    if (!erc20Contracts) {\n      window.alert('Undefined erc20Balance');\n      return;\n    }\n\n    const balance = await erc20Contracts.balanceOf(signer.getAddress());\n    setCurrentERCBalance(balance.toString());\n  }\n\n\n \n\n  function handleReservePriceChange(\n    event: ChangeEvent<HTMLInputElement>\n  ): void {\n    event.preventDefault();\n    setReservePriceInput(event.target.value);\n  }\n\n  function handleNumberOfBlockOpenChange(\n    event: ChangeEvent<HTMLInputElement>\n  ): void {\n    event.preventDefault();\n    setNumberOfBlockInput(event.target.value);\n  }\n\n  function handleOfferPriceDecrementChange(\n    event: ChangeEvent<HTMLInputElement>\n  ): void {\n    event.preventDefault();\n    setOfferPriceDecrementInput(event.target.value);\n  }\n\n  function handleTotalTokens(event: ChangeEvent<HTMLInputElement>): void {\n    event.preventDefault();\n    setTotalNumberOfTokenInput(event.target.value);\n  }\n\n\n\n  function handleBidAmountInput(event: ChangeEvent<HTMLInputElement>): void {\n    event.preventDefault();\n    setBidAmountInput(event.target.value);\n  }\n\n  async function handleGreetingSubmit(\n    event: MouseEvent<HTMLButtonElement>\n  ): Promise<void> {\n    event.preventDefault();\n\n    if (!signer) {\n      window.alert('No Signer.');\n      return;\n    }\n\n    if (!dutchAuctionContract) {\n      window.alert('Undefined DutchAuctionContract');\n      return;\n    }\n\n    if (owner === (await signer.getAddress())) {\n      window.alert('Owner cant bid.');\n      return;\n    }\n\n    \n\n    async function submitGreeting(\n      signer: Signer,\n      dutchAuctionContract: Contract\n    ): Promise<void> {\n      // handling the ERC20\n      try {\n        if (!erc20Contracts) {\n          return;\n        }\n       \n\n        await erc20Contracts.approve(\n          dutchAuctionContractAddress,\n          bidAmountInput\n        );\n      } catch (error: any) {\n        window.alert(\n          'Error!' + (error && error.message ? `\\n\\n${error.data.message}` : '')\n        );\n      }\n\n      try {\n        try {\n          const bid = await dutchAuctionContract\n            .connect(signer)\n            .bid(bidAmountInput);\n          console.log('before await');\n          await bid.wait();\n          console.log('The bid', bid);\n        } catch (error: any) {\n          window.alert(\n            'Error! New' +\n              (error && error.message ? `\\n\\n${error.data.message}` : '')\n          );\n        }\n        setAuctionWinner(await dutchAuctionContract.getWinnerAddress());\n      } catch (error: any) {\n        window.alert(\n          'Error! old' + (error && error.message ? `\\n\\n${error.data.message}` : '')\n        );\n      }\n    }\n\n    submitGreeting(signer, dutchAuctionContract);\n  }\n\n  async function handleSellNFT(\n    event: MouseEvent<HTMLButtonElement>\n  ): Promise<void> {\n    event.preventDefault();\n\n    if (!signer) {\n      window.alert('No Signer.');\n      return;\n    }\n\n    if (!dutchAuctionContract) {\n      window.alert('Undefined DutchAuctionContract');\n      return;\n    }\n    if (owner !== (await signer.getAddress())) {\n      window.alert('Only owner can sell NFT');\n      return;\n    }\n\n    async function sellNFT(\n      signer: Signer,\n      dutchAuctionContract: Contract\n    ): Promise<void> {\n      try {\n        try {\n          const sell = await dutchAuctionContract.connect(signer).sell();\n          await sell.wait();\n          console.log('The sell', sell);\n        } catch (error: any) {\n          window.alert(\n            'Error! New' +\n              (error && error.message ? `\\n\\n${error.data.message}` : '')\n          );\n        }\n        setAuctionWinner(await dutchAuctionContract.getWinnerAddress());\n      } catch (error: any) {\n        window.alert(\n          'Error! old' + (error && error.message ? `\\n\\n${error.data.message}` : '')\n        );\n      }\n    }\n\n    sellNFT(signer, dutchAuctionContract);\n  }\n\n  async function handleGetPrice(\n    event: MouseEvent<HTMLButtonElement>\n  ): Promise<void> {\n    event.preventDefault();\n\n    if (!signer) {\n      window.alert('No Signer.');\n      return;\n    }\n\n    if (!dutchAuctionContract) {\n      window.alert('Undefined DutchAuctionContract');\n      return;\n    }\n\n    const price = await dutchAuctionContract.getPrice();\n    setCreationPrice(price.toString());\n  }\n\n\n  async function showOwner(\n    event: MouseEvent<HTMLButtonElement>\n  ): Promise<void> {\n    event.preventDefault();\n\n    if (!signer) {\n      window.alert('No Signer.');\n      return;\n    }\n    if (!huskyContract) {\n      window.alert('Undefined DutchAuctionContract');\n      return;\n    }\n\n    try {\n      const owner = await huskyContract.ownerOf(nftId);\n      window.alert('Owner of the NFT is : '+owner.toString());\n    } catch (error: any) {\n      window.alert(\n        'Error!' + (error && error.message ? `\\n\\n${error.data.message}` : '')\n      );\n    }\n  }\n\n  return (\n <form>\n \n\n  \n <div className=\"jumbotron jumbotron-fluid\">\n  <div className=\"container\">\n   <div  className=\"form-row\">\n   <div className=\"col-md-12\">\n\n   <blockquote className=\"blockquote text-center\"> \n  <p className=\"mb-0\"><h3><b>Dutch Auction Contract</b></h3></p>\n\n \n</blockquote>\n  </div>\n  </div>\n  <div className=\"form-row\">\n    <div className=\"form-group col-md-4\">\n      <label htmlFor=\"inputEmail4\">ERC20 Address</label>\n      <input type=\"text\" className=\"form-control\" id=\"inputEmail4\" placeholder=\"ERC721 Address\" value={\n                  erc20ContractAddr\n                    ? erc20ContractAddr\n                    : `<Contract not yet deployed>`\n                }/>\n               \n    </div>\n    \n  </div>\n  <div className=\"form-row\">\n    <div className=\"form-group col-md-4\">\n      <label htmlFor=\"inputEmail4\"> ERC721 Address</label>\n      <input type=\"text\" className=\"form-control\" id=\"inputEmail4\" placeholder=\"ERC20 Address\" value={\n                  huskyContractAddr\n                    ? huskyContractAddr\n                    : `<Contract not yet deployed>`\n                }/>\n    </div>\n  </div>\n  <div className=\"form-row\">\n    <div className=\"form-group col-md-4\">\n      <label htmlFor=\"inputEmail4\">  Token ID</label>\n      <input type=\"text\" className=\"form-control\" id=\"inputEmail4\" placeholder=\"Token Id\" value=\n                 {nftId ? nftId : `<NFT is not minted yet>`}/>\n    </div>\n  </div>\n  <div className=\"form-row\">\n    <div className=\"form-group col-md-4\">\n      <label htmlFor=\"inputEmail4\"> Reserve Price</label>\n      <input type=\"text\" className=\"form-control\" id=\"inputEmail4\" placeholder=\" Reserve Price\" onChange={handleReservePriceChange}/>\n    </div>\n  </div>\n  <div className=\"form-row\">\n    <div className=\"form-group col-md-4\">\n      <label htmlFor=\"inputEmail4\"> Number of blocks open for auction</label>\n      <input type=\"text\" className=\"form-control\" id=\"inputEmail4\" placeholder=\"1000\" onChange={handleNumberOfBlockOpenChange}/>\n    </div>\n  </div>\n  <div className=\"form-row\">\n    <div className=\"form-group col-md-4\">\n      <label htmlFor=\"inputEmail4\"> Offer Price Decrement</label>\n      <input type=\"text\" className=\"form-control\" id=\"inputEmail4\" placeholder=\"10\" onChange={handleOfferPriceDecrementChange}/>\n    </div>\n  </div>\n  <div className=\"form-row text-center\">\n    <div className=\"form-group col-md-12 \">\n    \n    <button type=\"submit\" className=\"btn btn-primary btn-lg\"   onClick={handleDeployContract}>Deploy Dutch Auction Contract</button> \n    </div>\n  </div>\n </div>\n </div>\n  <br/>\n  <div  className=\"form-row\">\n   <div className=\"col-md-12\">\n\n   <blockquote className=\"blockquote text-center\"> \n  <p className=\"mb-0\"><h3> <b>Submit a Bid</b></h3></p>\n\n \n</blockquote>\n  </div>\n  </div>\n\n    \n <div className=\"jumbotron jumbotron-fluid\">\n  <div className=\"container\">\n\n  <div className=\"form-row\">\n    <div className=\"form-group col-md-4\">\n        <label htmlFor=\"inputEmail4\"> Dutch Contract Address</label>\n        <input type=\"text\" className=\"form-control\" id=\"inputEmail4\" placeholder=\"Dutch Contract Address\" value={\n                   dutchAuctionContractAddress\n                   ? dutchAuctionContractAddress\n                   : `<Contract not yet deployed>`\n                  }/>\n      \n    </div>\n  </div>\n\n  <div className=\"form-row\">\n    <div className=\"form-group col-md-4\">\n\n      \n        <label htmlFor=\"inputEmail4\"> Current Price</label>\n        <input type=\"text\" className=\"form-control\" id=\"inputEmail4\" placeholder=\"Current Price:\" value={creationPrice ? creationPrice : `<Current Price>`}/>\n    \n    </div>\n  </div>\n\n\n  <div className=\"form-row\">\n    <div className=\"form-group col-md-4\">\n        <label htmlFor=\"inputEmail4\"> Bid Amount</label>\n        <input type=\"text\" className=\"form-control\" id=\"inputEmail4\" placeholder=\"Enter Bid Amount\" onChange={handleBidAmountInput}/>\n    </div>\n  </div>\n\n  <div className=\"form-row\">\n    <div className=\"form-group col-md-4\">\n        <label htmlFor=\"inputEmail4\"> Winning Address of the Auction</label>\n        <input type=\"text\" className=\"form-control\" id=\"inputEmail4\" placeholder=\"Auction Winner\" value={auctionWinner ? auctionWinner : `<No winner yet>`}/>\n    </div>\n  </div>\n\n  <div className=\"form-row\">\n    <div className=\"form-group col-md-4 \">\n    <label htmlFor=\"inputEmail4\"> ERC20Token Balance :</label>\n    <input type=\"text\" className=\"form-control\" id=\"inputEmail4\" placeholder=\"Current ERC20Token Balance\" value={currentERCBalance ? currentERCBalance : `<ERC 20 Balance>`}/>\n    \n    </div>\n  </div>\n\n  <div className=\"form-row text-center\">\n    <div className=\"form-group col-md-12 \">\n   \n    <p> Auction Buttons for the Bidder</p>\n \n    </div>\n  </div> \n \n\n  <div className=\"form-row text-center\">\n    <div className=\"form-group col-md-3 \">\n   \n    <button type=\"submit\" className=\"btn btn-primary btn-lg\"   onClick={handleERCBalance}>Current ERC-20 Balance</button>\n \n    </div>\n  </div> \n \n\n\n  <div className=\"form-row text-center\">\n    <div className=\"form-group col-md-3 \">\n    \n    <button type=\"submit\" className=\"btn btn-primary btn-lg\"   onClick={handleGreetingSubmit}>Submit Bid for the Contract</button> \n    </div>\n  </div>\n \n  <div className=\"form-row text-center\">\n    <div className=\"form-group col-md-3 \">\n    \n    <button type=\"submit\" className=\"btn btn-primary btn-lg\"   onClick={showOwner}>Owner Address of the NFT</button> \n    </div>\n  </div>    \n  <div className=\"form-row text-center\">\n    <div className=\"form-group col-md-3\">\n    \n    <button type=\"submit\" className=\"btn btn-primary btn-lg\"   onClick={handleGetPrice}>Get Current Price of NFT</button> \n    </div>\n  </div>  \n  </div>\n  </div>\n  </form>\n   \n  );\n}\n","/Users/akshaysawant/Downloads/Test/frontend/src/components/ActivateDeactivate.tsx",[],"/Users/akshaysawant/Downloads/Test/frontend/src/components/WalletStatus.tsx",[],"/Users/akshaysawant/Downloads/Test/frontend/src/utils/hooks.ts",[],"/Users/akshaysawant/Downloads/Test/frontend/src/utils/connectors.ts",[],{"ruleId":"61","severity":1,"message":"62","line":5,"column":10,"nodeType":"63","messageId":"64","endLine":5,"endColumn":24},{"ruleId":"61","severity":1,"message":"65","line":6,"column":10,"nodeType":"63","messageId":"64","endLine":6,"endColumn":21},{"ruleId":"61","severity":1,"message":"66","line":2,"column":36,"nodeType":"63","messageId":"64","endLine":2,"endColumn":41},{"ruleId":"61","severity":1,"message":"67","line":15,"column":10,"nodeType":"63","messageId":"64","endLine":15,"endColumn":35},{"ruleId":"61","severity":1,"message":"68","line":17,"column":10,"nodeType":"63","messageId":"64","endLine":17,"endColumn":20},{"ruleId":"61","severity":1,"message":"69","line":18,"column":10,"nodeType":"63","messageId":"64","endLine":18,"endColumn":15},{"ruleId":"61","severity":1,"message":"70","line":20,"column":7,"nodeType":"63","messageId":"64","endLine":20,"endColumn":33},{"ruleId":"61","severity":1,"message":"71","line":34,"column":7,"nodeType":"63","messageId":"64","endLine":34,"endColumn":27},{"ruleId":"61","severity":1,"message":"72","line":49,"column":7,"nodeType":"63","messageId":"64","endLine":49,"endColumn":18},{"ruleId":"61","severity":1,"message":"73","line":55,"column":7,"nodeType":"63","messageId":"64","endLine":55,"endColumn":24},{"ruleId":"61","severity":1,"message":"74","line":64,"column":7,"nodeType":"63","messageId":"64","endLine":64,"endColumn":12},{"ruleId":"61","severity":1,"message":"75","line":73,"column":7,"nodeType":"63","messageId":"64","endLine":73,"endColumn":18},{"ruleId":"61","severity":1,"message":"76","line":77,"column":7,"nodeType":"63","messageId":"64","endLine":77,"endColumn":18},{"ruleId":"61","severity":1,"message":"77","line":82,"column":7,"nodeType":"63","messageId":"64","endLine":82,"endColumn":19},{"ruleId":"61","severity":1,"message":"78","line":92,"column":20,"nodeType":"63","messageId":"64","endLine":92,"endColumn":26},{"ruleId":"61","severity":1,"message":"79","line":95,"column":10,"nodeType":"63","messageId":"64","endLine":95,"endColumn":25},{"ruleId":"61","severity":1,"message":"80","line":95,"column":27,"nodeType":"63","messageId":"64","endLine":95,"endColumn":45},{"ruleId":"61","severity":1,"message":"81","line":99,"column":10,"nodeType":"63","messageId":"64","endLine":99,"endColumn":29},{"ruleId":"61","severity":1,"message":"82","line":99,"column":31,"nodeType":"63","messageId":"64","endLine":99,"endColumn":53},{"ruleId":"61","severity":1,"message":"83","line":104,"column":10,"nodeType":"63","messageId":"64","endLine":104,"endColumn":18},{"ruleId":"61","severity":1,"message":"84","line":104,"column":20,"nodeType":"63","messageId":"64","endLine":104,"endColumn":31},{"ruleId":"61","severity":1,"message":"85","line":105,"column":10,"nodeType":"63","messageId":"64","endLine":105,"endColumn":23},{"ruleId":"61","severity":1,"message":"86","line":105,"column":25,"nodeType":"63","messageId":"64","endLine":105,"endColumn":41},{"ruleId":"61","severity":1,"message":"87","line":114,"column":10,"nodeType":"63","messageId":"64","endLine":114,"endColumn":33},{"ruleId":"61","severity":1,"message":"88","line":265,"column":12,"nodeType":"63","messageId":"64","endLine":265,"endColumn":29},{"ruleId":"61","severity":1,"message":"89","line":345,"column":18,"nodeType":"63","messageId":"64","endLine":345,"endColumn":31},"@typescript-eslint/no-unused-vars","'SectionDivider' is defined but never used.","Identifier","unusedVar","'SignMessage' is defined but never used.","'utils' is defined but never used.","'HardhatRuntimeEnvironment' is defined but never used.","'getAddress' is defined but never used.","'Title' is defined but never used.","'StyledDeployContractButton' is assigned a value but never used.","'StyledActivateButton' is assigned a value but never used.","'ColoredLine' is assigned a value but never used.","'StyledGreetingDiv' is assigned a value but never used.","'title' is assigned a value but never used.","'StyledLabel' is assigned a value but never used.","'StyledInput' is assigned a value but never used.","'StyledButton' is assigned a value but never used.","'active' is assigned a value but never used.","'greeterContract' is assigned a value but never used.","'setGreeterContract' is assigned a value but never used.","'greeterContractAddr' is assigned a value but never used.","'setGreeterContractAddr' is assigned a value but never used.","'greeting' is assigned a value but never used.","'setGreeting' is assigned a value but never used.","'greetingInput' is assigned a value but never used.","'setGreetingInput' is assigned a value but never used.","'totalNumberOfTokenInput' is assigned a value but never used.","'handleTotalTokens' is defined but never used.","'handleSellNFT' is defined but never used."]
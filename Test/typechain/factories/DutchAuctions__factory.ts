/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DutchAuctions, DutchAuctionsInterface } from "../DutchAuctions";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_erc20TokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_erc721TokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_nftTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reservePrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_numBlocksAuctionOpen",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_offerPriceDecrement",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "bid",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20TokenAddress",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc721TokenAddress",
    outputs: [
      {
        internalType: "contract IERC721",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "finalize",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAddressOfOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNumBlocksOpen",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOfferPriceDecrement",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReservePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWinnerAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nftTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nop",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "refundAmount",
        type: "uint256",
      },
    ],
    name: "refund",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200157538038062001575833981810160405281019062000037919062000156565b85600760026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600981905550826002819055508160038190555080600481905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550436005819055505050505050506200025e565b60008151905062000139816200022a565b92915050565b600081519050620001508162000244565b92915050565b60008060008060008060c087890312156200017057600080fd5b60006200018089828a0162000128565b96505060206200019389828a0162000128565b9550506040620001a689828a016200013f565b9450506060620001b989828a016200013f565b9350506080620001cc89828a016200013f565b92505060a0620001df89828a016200013f565b9150509295509295509295565b6000620001f98262000200565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6200023581620001ec565b81146200024157600080fd5b50565b6200024f8162000220565b81146200025b57600080fd5b50565b611307806200026e6000396000f3fe6080604052600436106100c25760003560e01c80637e8305741161007f578063c54bfb6811610059578063c54bfb681461020b578063df241cb914610236578063f072232214610261578063f835cd3c1461028c576100c2565b80637e8305741461018a57806385d260fa146101b557806398d5fdca146101e0576100c2565b806310a37c26146100c7578063278ecde1146100f25780632c588a761461010e5780632e9c58bb14610139578063454a2ab3146101645780634bb278f314610180575b600080fd5b3480156100d357600080fd5b506100dc6102b7565b6040516100e99190610e84565b60405180910390f35b61010c60048036038101906101079190610da5565b6102e1565b005b34801561011a57600080fd5b5061012361039a565b6040516101309190611000565b60405180910390f35b34801561014557600080fd5b5061014e6103a4565b60405161015b9190610f6d565b60405180910390f35b61017e60048036038101906101799190610da5565b6103ad565b005b6101886108c9565b005b34801561019657600080fd5b5061019f610a8e565b6040516101ac9190611000565b60405180910390f35b3480156101c157600080fd5b506101ca610a94565b6040516101d79190610e84565b60405180910390f35b3480156101ec57600080fd5b506101f5610abd565b6040516102029190611000565b60405180910390f35b34801561021757600080fd5b50610220610afe565b60405161022d9190611000565b60405180910390f35b34801561024257600080fd5b5061024b610b08565b6040516102589190610fa3565b60405180910390f35b34801561026d57600080fd5b50610276610b2e565b6040516102839190611000565b60405180910390f35b34801561029857600080fd5b506102a1610b38565b6040516102ae9190610f88565b60405180910390f35b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600760009054906101000a900460ff16801561030a5750600760019054906101000a900460ff16155b61031357600080fd5b6001600760016101000a81548160ff021916908315150217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610396573d6000803e3d6000fd5b5050565b6000600354905090565b60006001905090565b6103b681610b5e565b6103c1600954610b5e565b6103ca30610bf7565b6103d343610b5e565b6103de600554610b5e565b6103e9600354610b5e565b600760009054906101000a900460ff161561040357600080fd5b6104416040518060400160405280600c81526020017f49742077656e7420686572650000000000000000000000000000000000000000815250610c90565b61047f6040518060400160405280600c81526020017f4974207061737420686572650000000000000000000000000000000000000000815250610c90565b436003546005546104909190611037565b61049a91906110e7565b6004546104a7919061108d565b6002546104b49190611037565b8110156104f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ed90610fe0565b60405180910390fd5b6105346040518060400160405280600f81526020017f49742070726573656e7420686572650000000000000000000000000000000000815250610c90565b33600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506105b36040518060400160405280601381526020017f5468652077696e6e657261646472206865726500000000000000000000000000815250610c90565b806006819055506105f86040518060400160405280601281526020017f57696e6e696e672062696420416d6f756e740000000000000000000000000000815250610c90565b600760029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b330836040518363ffffffff1660e01b8152600401610655929190610f44565b602060405180830381600087803b15801561066f57600080fd5b505af1158015610683573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a79190610d7c565b506106e66040518060400160405280601481526020017f496e73756666696369656e742062616c616e6365000000000000000000000000815250610c90565b600760029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161074593929190610f0d565b602060405180830381600087803b15801561075f57600080fd5b505af1158015610773573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107979190610d7c565b506107d66040518060400160405280601581526020017f496e73756666696369656e74205472616e736665720000000000000000000000815250610c90565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166009546040518463ffffffff1660e01b815260040161087993929190610e9f565b600060405180830381600087803b15801561089357600080fd5b505af11580156108a7573d6000803e3d6000fd5b505050506001600760006101000a81548160ff02191690831515021790555050565b600760009054906101000a900460ff1680156108f25750600760019054906101000a900460ff16155b6108fb57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461095557600080fd5b6001600760016101000a81548160ff02191690831515021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6006549081150290604051600060405180830381858888f193505050501580156109d8573d6000803e3d6000fd5b50600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16336009546040518463ffffffff1660e01b8152600401610a5a93929190610ed6565b600060405180830381600087803b158015610a7457600080fd5b505af1158015610a88573d6000803e3d6000fd5b50505050565b60095481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008043600354600554610ad19190611037565b610adb91906110e7565b600454610ae8919061108d565b600254610af59190611037565b90508091505090565b6000600454905090565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600254905090565b600760029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610bf481604051602401610b729190611000565b6040516020818303038152906040527ff5b1bba9000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610d29565b50565b610c8d81604051602401610c0b9190610e84565b6040516020818303038152906040527f2c2ecbc2000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610d29565b50565b610d2681604051602401610ca49190610fbe565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610d29565b50565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b600081519050610d61816112a3565b92915050565b600081359050610d76816112ba565b92915050565b600060208284031215610d8e57600080fd5b6000610d9c84828501610d52565b91505092915050565b600060208284031215610db757600080fd5b6000610dc584828501610d67565b91505092915050565b610dd781611163565b82525050565b610de68161111b565b82525050565b610df58161112d565b82525050565b610e0481611175565b82525050565b610e1381611199565b82525050565b6000610e248261101b565b610e2e8185611026565b9350610e3e8185602086016111e1565b610e4781611243565b840191505092915050565b6000610e5f603683611026565b9150610e6a82611254565b604082019050919050565b610e7e81611159565b82525050565b6000602082019050610e996000830184610ddd565b92915050565b6000606082019050610eb46000830186610dce565b610ec16020830185610dce565b610ece6040830184610e75565b949350505050565b6000606082019050610eeb6000830186610dce565b610ef86020830185610ddd565b610f056040830184610e75565b949350505050565b6000606082019050610f226000830186610ddd565b610f2f6020830185610ddd565b610f3c6040830184610e75565b949350505050565b6000604082019050610f596000830185610ddd565b610f666020830184610e75565b9392505050565b6000602082019050610f826000830184610dec565b92915050565b6000602082019050610f9d6000830184610dfb565b92915050565b6000602082019050610fb86000830184610e0a565b92915050565b60006020820190508181036000830152610fd88184610e19565b905092915050565b60006020820190508181036000830152610ff981610e52565b9050919050565b60006020820190506110156000830184610e75565b92915050565b600081519050919050565b600082825260208201905092915050565b600061104282611159565b915061104d83611159565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561108257611081611214565b5b828201905092915050565b600061109882611159565b91506110a383611159565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156110dc576110db611214565b5b828202905092915050565b60006110f282611159565b91506110fd83611159565b9250828210156111105761110f611214565b5b828203905092915050565b600061112682611139565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061116e826111bd565b9050919050565b600061118082611187565b9050919050565b600061119282611139565b9050919050565b60006111a4826111ab565b9050919050565b60006111b682611139565b9050919050565b60006111c8826111cf565b9050919050565b60006111da82611139565b9050919050565b60005b838110156111ff5780820151818401526020810190506111e4565b8381111561120e576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f8301169050919050565b7f416d6f756e74206f66206574682073656e74206973206c657373207468616e2060008201527f746865207072696365206f662074686520746f6b656e00000000000000000000602082015250565b6112ac8161112d565b81146112b757600080fd5b50565b6112c381611159565b81146112ce57600080fd5b5056fea2646970667358221220b5313e147eb045ded5b9ca1e6b5f70de4be7cb7357313191748ec67c1171818164736f6c63430008040033";

export class DutchAuctions__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _erc20TokenAddress: string,
    _erc721TokenAddress: string,
    _nftTokenId: BigNumberish,
    _reservePrice: BigNumberish,
    _numBlocksAuctionOpen: BigNumberish,
    _offerPriceDecrement: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DutchAuctions> {
    return super.deploy(
      _erc20TokenAddress,
      _erc721TokenAddress,
      _nftTokenId,
      _reservePrice,
      _numBlocksAuctionOpen,
      _offerPriceDecrement,
      overrides || {}
    ) as Promise<DutchAuctions>;
  }
  getDeployTransaction(
    _erc20TokenAddress: string,
    _erc721TokenAddress: string,
    _nftTokenId: BigNumberish,
    _reservePrice: BigNumberish,
    _numBlocksAuctionOpen: BigNumberish,
    _offerPriceDecrement: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _erc20TokenAddress,
      _erc721TokenAddress,
      _nftTokenId,
      _reservePrice,
      _numBlocksAuctionOpen,
      _offerPriceDecrement,
      overrides || {}
    );
  }
  attach(address: string): DutchAuctions {
    return super.attach(address) as DutchAuctions;
  }
  connect(signer: Signer): DutchAuctions__factory {
    return super.connect(signer) as DutchAuctions__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DutchAuctionsInterface {
    return new utils.Interface(_abi) as DutchAuctionsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DutchAuctions {
    return new Contract(address, _abi, signerOrProvider) as DutchAuctions;
  }
}

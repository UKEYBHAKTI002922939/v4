/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC20Token, ERC20TokenInterface } from "../ERC20Token";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001e7f38038062001e7f833981810160405281019062000037919062000464565b6040518060400160405280600581526020017f45524332300000000000000000000000000000000000000000000000000000008152506040518060400160405280600681526020017f44636f696e7300000000000000000000000000000000000000000000000000008152508160039080519060200190620000bb9291906200039d565b508060049080519060200190620000d49291906200039d565b505050620000f7620000eb6200014360201b60201c565b6200014b60201b60201c565b806006819055506200013c33620001136200021160201b60201c565b600a620001219190620005d0565b6006546200013091906200070d565b6200021a60201b60201c565b5062000869565b600033905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006012905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156200028d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200028490620004c8565b60405180910390fd5b620002a1600083836200039360201b60201c565b8060026000828254620002b5919062000518565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546200030c919062000518565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620003739190620004ea565b60405180910390a36200038f600083836200039860201b60201c565b5050565b505050565b505050565b828054620003ab9062000785565b90600052602060002090601f016020900481019282620003cf57600085556200041b565b82601f10620003ea57805160ff19168380011785556200041b565b828001600101855582156200041b579182015b828111156200041a578251825591602001919060010190620003fd565b5b5090506200042a91906200042e565b5090565b5b80821115620004495760008160009055506001016200042f565b5090565b6000815190506200045e816200084f565b92915050565b6000602082840312156200047757600080fd5b600062000487848285016200044d565b91505092915050565b60006200049f601f8362000507565b9150620004ac8262000826565b602082019050919050565b620004c2816200076e565b82525050565b60006020820190508181036000830152620004e38162000490565b9050919050565b6000602082019050620005016000830184620004b7565b92915050565b600082825260208201905092915050565b600062000525826200076e565b915062000532836200076e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156200056a5762000569620007bb565b5b828201905092915050565b6000808291508390505b6001851115620005c7578086048111156200059f576200059e620007bb565b5b6001851615620005af5780820291505b8081029050620005bf8562000819565b94506200057f565b94509492505050565b6000620005dd826200076e565b9150620005ea8362000778565b9250620006197fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848462000621565b905092915050565b60008262000633576001905062000706565b8162000643576000905062000706565b81600181146200065c576002811462000667576200069d565b600191505062000706565b60ff8411156200067c576200067b620007bb565b5b8360020a915084821115620006965762000695620007bb565b5b5062000706565b5060208310610133831016604e8410600b8410161715620006d75782820a905083811115620006d157620006d0620007bb565b5b62000706565b620006e6848484600162000575565b925090508184048111156200070057620006ff620007bb565b5b81810290505b9392505050565b60006200071a826200076e565b915062000727836200076e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615620007635762000762620007bb565b5b828202905092915050565b6000819050919050565b600060ff82169050919050565b600060028204905060018216806200079e57607f821691505b60208210811415620007b557620007b4620007ea565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60008160011c9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6200085a816200076e565b81146200086657600080fd5b50565b61160680620008796000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063715018a61161008c578063a457c2d711610066578063a457c2d71461024f578063a9059cbb1461027f578063dd62ed3e146102af578063f2fde38b146102df576100ea565b8063715018a6146102095780638da5cb5b1461021357806395d89b4114610231576100ea565b806323b872dd116100c857806323b872dd1461015b578063313ce5671461018b57806339509351146101a957806370a08231146101d9576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461013d575b600080fd5b6100f76102fb565b6040516101049190611014565b60405180910390f35b61012760048036038101906101229190610df2565b61038d565b6040516101349190610ff9565b60405180910390f35b6101456103b0565b6040516101529190611156565b60405180910390f35b61017560048036038101906101709190610da3565b6103ba565b6040516101829190610ff9565b60405180910390f35b6101936103e9565b6040516101a09190611171565b60405180910390f35b6101c360048036038101906101be9190610df2565b6103f2565b6040516101d09190610ff9565b60405180910390f35b6101f360048036038101906101ee9190610d3e565b610429565b6040516102009190611156565b60405180910390f35b610211610471565b005b61021b610485565b6040516102289190610fde565b60405180910390f35b6102396104af565b6040516102469190611014565b60405180910390f35b61026960048036038101906102649190610df2565b610541565b6040516102769190610ff9565b60405180910390f35b61029960048036038101906102949190610df2565b6105b8565b6040516102a69190610ff9565b60405180910390f35b6102c960048036038101906102c49190610d67565b6105db565b6040516102d69190611156565b60405180910390f35b6102f960048036038101906102f49190610d3e565b610662565b005b60606003805461030a90611286565b80601f016020809104026020016040519081016040528092919081815260200182805461033690611286565b80156103835780601f1061035857610100808354040283529160200191610383565b820191906000526020600020905b81548152906001019060200180831161036657829003601f168201915b5050505050905090565b6000806103986106e6565b90506103a58185856106ee565b600191505092915050565b6000600254905090565b6000806103c56106e6565b90506103d28582856108b9565b6103dd858585610945565b60019150509392505050565b60006012905090565b6000806103fd6106e6565b905061041e81858561040f85896105db565b61041991906111a8565b6106ee565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610479610bc6565b6104836000610c44565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546104be90611286565b80601f01602080910402602001604051908101604052809291908181526020018280546104ea90611286565b80156105375780601f1061050c57610100808354040283529160200191610537565b820191906000526020600020905b81548152906001019060200180831161051a57829003601f168201915b5050505050905090565b60008061054c6106e6565b9050600061055a82866105db565b90508381101561059f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059690611136565b60405180910390fd5b6105ac82868684036106ee565b60019250505092915050565b6000806105c36106e6565b90506105d0818585610945565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b61066a610bc6565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d190611056565b60405180910390fd5b6106e381610c44565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561075e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075590611116565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156107ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c590611076565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516108ac9190611156565b60405180910390a3505050565b60006108c584846105db565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461093f5781811015610931576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092890611096565b60405180910390fd5b61093e84848484036106ee565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156109b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ac906110f6565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a25576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1c90611036565b60405180910390fd5b610a30838383610d0a565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610ab6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aad906110b6565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b4991906111a8565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610bad9190611156565b60405180910390a3610bc0848484610d0f565b50505050565b610bce6106e6565b73ffffffffffffffffffffffffffffffffffffffff16610bec610485565b73ffffffffffffffffffffffffffffffffffffffff1614610c42576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c39906110d6565b60405180910390fd5b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b505050565b505050565b600081359050610d23816115a2565b92915050565b600081359050610d38816115b9565b92915050565b600060208284031215610d5057600080fd5b6000610d5e84828501610d14565b91505092915050565b60008060408385031215610d7a57600080fd5b6000610d8885828601610d14565b9250506020610d9985828601610d14565b9150509250929050565b600080600060608486031215610db857600080fd5b6000610dc686828701610d14565b9350506020610dd786828701610d14565b9250506040610de886828701610d29565b9150509250925092565b60008060408385031215610e0557600080fd5b6000610e1385828601610d14565b9250506020610e2485828601610d29565b9150509250929050565b610e37816111fe565b82525050565b610e4681611210565b82525050565b6000610e578261118c565b610e618185611197565b9350610e71818560208601611253565b610e7a81611316565b840191505092915050565b6000610e92602383611197565b9150610e9d82611327565b604082019050919050565b6000610eb5602683611197565b9150610ec082611376565b604082019050919050565b6000610ed8602283611197565b9150610ee3826113c5565b604082019050919050565b6000610efb601d83611197565b9150610f0682611414565b602082019050919050565b6000610f1e602683611197565b9150610f298261143d565b604082019050919050565b6000610f41602083611197565b9150610f4c8261148c565b602082019050919050565b6000610f64602583611197565b9150610f6f826114b5565b604082019050919050565b6000610f87602483611197565b9150610f9282611504565b604082019050919050565b6000610faa602583611197565b9150610fb582611553565b604082019050919050565b610fc98161123c565b82525050565b610fd881611246565b82525050565b6000602082019050610ff36000830184610e2e565b92915050565b600060208201905061100e6000830184610e3d565b92915050565b6000602082019050818103600083015261102e8184610e4c565b905092915050565b6000602082019050818103600083015261104f81610e85565b9050919050565b6000602082019050818103600083015261106f81610ea8565b9050919050565b6000602082019050818103600083015261108f81610ecb565b9050919050565b600060208201905081810360008301526110af81610eee565b9050919050565b600060208201905081810360008301526110cf81610f11565b9050919050565b600060208201905081810360008301526110ef81610f34565b9050919050565b6000602082019050818103600083015261110f81610f57565b9050919050565b6000602082019050818103600083015261112f81610f7a565b9050919050565b6000602082019050818103600083015261114f81610f9d565b9050919050565b600060208201905061116b6000830184610fc0565b92915050565b60006020820190506111866000830184610fcf565b92915050565b600081519050919050565b600082825260208201905092915050565b60006111b38261123c565b91506111be8361123c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156111f3576111f26112b8565b5b828201905092915050565b60006112098261121c565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015611271578082015181840152602081019050611256565b83811115611280576000848401525b50505050565b6000600282049050600182168061129e57607f821691505b602082108114156112b2576112b16112e7565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6115ab816111fe565b81146115b657600080fd5b50565b6115c28161123c565b81146115cd57600080fd5b5056fea264697066735822122040098767ce996b78a10eac98925d13e5534ea7ce5e3fde375ec8e26f6d9cbb2564736f6c63430008040033";

export class ERC20Token__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC20Token> {
    return super.deploy(_amount, overrides || {}) as Promise<ERC20Token>;
  }
  getDeployTransaction(
    _amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_amount, overrides || {});
  }
  attach(address: string): ERC20Token {
    return super.attach(address) as ERC20Token;
  }
  connect(signer: Signer): ERC20Token__factory {
    return super.connect(signer) as ERC20Token__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20TokenInterface {
    return new utils.Interface(_abi) as ERC20TokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20Token {
    return new Contract(address, _abi, signerOrProvider) as ERC20Token;
  }
}
